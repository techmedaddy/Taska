version: "3.8"

services:
  # Auth Service
  auth-service:
    image: node:18
    container_name: auth-service
    working_dir: /app
    volumes:
      - ./services/auth-service:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taksa_user:password@postgres:5432/taksa_auth
    networks:
      - taksa-network
    restart: always

  # Blockchain Service
  blockchain-service:
    image: node:18
    container_name: blockchain-service
    working_dir: /app
    volumes:
      - ./services/blockchain-service:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "5002:5002"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taksa_user:password@postgres:5432/taksa_blockchain
      - KAFKA_BROKER=kafka:9092
    networks:
      - taksa-network
    restart: always

  # Wallet Service
  wallet-service:
    image: node:18
    container_name: wallet-service
    working_dir: /app
    volumes:
      - ./services/wallet-service:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "5003:5003"
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taksa_user:password@postgres:5432/taksa_wallet
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
    networks:
      - taksa-network
    restart: always

  # Explorer Service
  explorer-service:
    image: node:18
    container_name: explorer-service
    working_dir: /app
    volumes:
      - ./services/explorer-service:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "5004:5004"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://taksa_user:password@postgres:5432/taksa_explorer
      - KAFKA_BROKER=kafka:9092
    networks:
      - taksa-network
    restart: always

  # Frontend
  frontend:
    image: node:18
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm start"
    ports:
      - "3267:3000"
    depends_on:
      - auth-service
      - blockchain-service
      - wallet-service
      - explorer-service
    networks:
      - taksa-network
    restart: always

  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5437:5432"
    environment:
      POSTGRES_USER: taksa_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taksa_auth
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taksa-network
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "taksa_user"]
      interval: 10s
      retries: 5

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6349:6379"
    networks:
      - taksa-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  # Kafka
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      retries: 5
    networks:
      - taksa-network
    restart: always

  # Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      retries: 5
    networks:
      - taksa-network
    restart: always

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - auth-service
      - blockchain-service
      - wallet-service
      - explorer-service
    networks:
      - taksa-network
    restart: always

volumes:
  postgres_data: {}

networks:
  taksa-network:
    driver: bridge
